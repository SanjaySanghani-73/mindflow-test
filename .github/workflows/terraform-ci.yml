name: Terraform CI

on:
  pull_request:
    branches: [main, master]
    paths:
      - '**.tf'
      - '.github/workflows/terraform-ci.yml'
  push:
    branches: [main, master]
    paths:
      - '**.tf'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform-checks:
    name: Terraform CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init -input=false 
        continue-on-error: true

      - name: Terraform Format Check
        id: fmt
        working-directory: ./terraform
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        working-directory: ./terraform
        run: terraform validate -no-color
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env:
          # Add your cloud credentials here as GitHub Secrets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform CI Results ðŸš€
            
            | Check | Status |
            |-------|--------|
            | ðŸŽ¨ Format | ${{ steps.fmt.outcome }} |
            | ðŸ”§ Init | ${{ steps.init.outcome }} |
            | âœ… Validate | ${{ steps.validate.outcome }} |
            | ðŸ“‹ Plan | ${{ steps.plan.outcome }} |
            
            <details>
            <summary>Show Plan Output</summary>
            
            \\`\\`\\`terraform
            ${{ steps.plan.outputs.stdout }}
            \\`\\`\\`
            
            </details>
            
            *Triggered by: [\\`${{ github.run_id }}\\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Check for Failures
        if: steps.fmt.outcome == 'failure' || steps.init.outcome == 'failure' || steps.validate.outcome == 'failure'
        run: exit 1
